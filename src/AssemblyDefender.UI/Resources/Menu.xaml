<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:AssemblyDefender.UI">

	<Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
		<Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
		<Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
		<Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
		<Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
		<Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
		<Setter Property="Background"
                Value="#F5F5F5"/>
		<Setter Property="FontFamily"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
		<Setter Property="FontSize"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
		<Setter Property="FontStyle"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
		<Setter Property="FontWeight"
                Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
		<Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
		<Setter Property="VerticalContentAlignment"
                Value="Center"/>
		<Setter Property="BorderThickness"
                Value="1"/>
		<Setter Property="BorderBrush"
                Value="#FF959595"/>
		<Setter Property="Padding"
                Value="2"/>
		<Setter Property="Grid.IsSharedSizeScope"
                Value="true"/>
		<Setter Property="HasDropShadow"
                Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
		<Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border Name="ContextMenuBorder" Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Rectangle Fill="#F1F1F1"
                                        HorizontalAlignment="Left"
                                        Width="28"
                                        Margin="2"
                                        RadiusX="2"
                                        RadiusY="2"/>
							<Rectangle HorizontalAlignment="Left"
                                        Width="1"
                                        Margin="30,2,0,2"
                                        Fill="#E2E3E3"/>
							<Rectangle HorizontalAlignment="Left"
                                        Width="1"
                                        Margin="31,2,0,2"
                                        Fill="White"/>
							<ScrollViewer Name="ContextMenuScrollViewer" CanContentScroll="true"
                                            Grid.ColumnSpan="2" Margin="1,0"
                                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
								<Grid RenderOptions.ClearTypeHint="Enabled">
									<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
										<Rectangle
                                            Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}"
                                            Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}"
                                            Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
									</Canvas>
									<Rectangle Fill="#e8e8e8"
                                               Width="26"
                                               HorizontalAlignment="Left" />
									<ItemsPresenter Name="ItemsPresenter" Margin="1"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Grid>
							</ScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
	<Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
	<Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
	<Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>

	<Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>

	<SolidColorBrush x:Key="ContextMenuBackgroundBrush" Color="#F5F5F5" />
	<SolidColorBrush x:Key="SubMenuBackgroundBrush" Color="#F5F5F5" />

	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                     TargetType="{x:Type ContentControl}">
		<Border Background="{StaticResource SubMenuBackgroundBrush}"
                BorderBrush="#959595"
                BorderThickness="1">
			<Grid>
				<Rectangle Fill="#F1F1F1"
                           HorizontalAlignment="Left"
                           Width="28"
                           Margin="2"
                           RadiusX="2"
                           RadiusY="2"/>
				<Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="30,2,0,2"
                           Fill="#E2E3E3"/>
				<Rectangle HorizontalAlignment="Left"
                           Width="1"
                           Margin="31,2,0,2"
                           Fill="White"/>

				<ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
			</Grid>
		</Border>
	</ControlTemplate>

	<Style x:Key="MenuScrollButton"
           TargetType="{x:Type RepeatButton}"
           BasedOn="{x:Null}">
		<Setter Property="ClickMode"
                Value="Hover"/>
		<Setter Property="MinWidth"
                Value="0"/>
		<Setter Property="MinHeight"
                Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<DockPanel Background="Transparent"
                               SnapsToDevicePixels="true">
						<Rectangle DockPanel.Dock="Right"
                                   x:Name="R1"
                                   Width="1"
                                   Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Bottom"
                                   x:Name="B1"
                                   Height="1"
                                   Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Left"
                                   x:Name="L1"
                                   Width="1"
                                   Fill="Transparent"/>
						<Rectangle DockPanel.Dock="Top"
                                   x:Name="T1"
                                   Height="1"
                                   Fill="Transparent"/>
						<ContentPresenter x:Name="ContentContainer"
                                          Margin="2"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
                                 Value="true">
							<Setter TargetName="R1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter TargetName="B1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
							<Setter TargetName="L1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter TargetName="T1"
                                    Property="Fill"
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"/>
							<Setter TargetName="ContentContainer"
                                    Property="Margin"
                                    Value="3,3,1,1"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}"
           TargetType="{x:Type ScrollViewer}"
           BasedOn="{x:Null}">
		<Setter Property="HorizontalScrollBarVisibility"
                Value="Hidden"/>
		<Setter Property="VerticalScrollBarVisibility"
                Value="Auto"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Border Grid.Row="1"
                                Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
						</Border>
						<RepeatButton
                                      Style="{StaticResource MenuScrollButton}"
                                      Grid.Row="0"
                                      Grid.Column="0"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="0">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource UpArrow}"/>
						</RepeatButton>
						<RepeatButton
							Style="{StaticResource MenuScrollButton}"
							Grid.Row="2"
							Grid.Column="0"
							Command="{x:Static ScrollBar.LineDownCommand}"
							CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
							Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding FallbackValue="Visibility.Collapsed"
                                              Converter="{StaticResource MenuScrollingVisibilityConverter}"
                                              ConverterParameter="100">
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ComputedVerticalScrollBarVisibility"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="VerticalOffset"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ExtentHeight"/>
									<Binding RelativeSource="{RelativeSource TemplatedParent}"
                                             Path="ViewportHeight"/>
								</MultiBinding>
							</RepeatButton.Visibility>
							<Path Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"
                                  Data="{StaticResource DownArrow}"/>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<LinearGradientBrush x:Key="MenuItemSelectionFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#34C5EBFF"
                          Offset="0"/>
			<GradientStop Color="#3481D8FF"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="MenuItemPressedFill"
                         StartPoint="0,0"
                         EndPoint="0,1">
		<LinearGradientBrush.GradientStops>
			<GradientStop Color="#28717070"
                          Offset="0"/>
			<GradientStop Color="#50717070"
                          Offset="0.75"/>
			<GradientStop Color="#90717070"
                          Offset="1"/>
		</LinearGradientBrush.GradientStops>
	</LinearGradientBrush>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="0,2,0,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Grid SnapsToDevicePixels="true">
						<Rectangle Height="1"
                                   Margin="30,0,1,1"
                                   Fill="#E0E0E0"/>
						<Rectangle Height="1"
                                   Margin="30,1,1,0"
                                   Fill="White"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
			<Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
			<Rectangle x:Name="InnerBorder"
                       Margin="2"/>
			<DockPanel>
				<ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
				<ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</DockPanel>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
                     Value="{x:Null}">
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                     Value="true">
				<Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#90717070"/>
				<Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>

			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
				<Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedFill}"/>
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                     Value="false">
				<Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
				<Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
			<Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
			<Rectangle x:Name="InnerBorder"
                       Margin="2"/>
			<DockPanel>
				<ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
				<ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
			</DockPanel>
			<Popup x:Name="PART_Popup"
                   HorizontalOffset="1"
                   VerticalOffset="-1"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
				<ContentControl Name="SubMenuBorder"
                                Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                IsTabStop="false">
					<ScrollViewer Name="SubMenuScrollViewer" CanContentScroll="true"
                                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
						<Grid RenderOptions.ClearTypeHint="Enabled">
							<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
								<Rectangle
                                    Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                    Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                    Fill="{StaticResource SubMenuBackgroundBrush}" />
							</Canvas>
							<Rectangle Fill="#e8e8e8"
                                       Width="26"
                                       HorizontalAlignment="Left" />
							<ItemsPresenter Name="ItemsPresenter"
                                            Margin="1"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
						</Grid>
					</ScrollViewer>
				</ContentControl>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
				<Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
			</Trigger>
			<Trigger Property="Icon"
                     Value="{x:Null}">
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                     Value="true">
				<Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#90717070"/>
				<Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50FFFFFF"/>

			</Trigger>
			<Trigger Property="IsKeyboardFocused"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
				<Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedFill}"/>
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
			</Trigger>
			<Trigger Property="IsSubmenuOpen"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#E0717070"/>
				<Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemPressedFill}"/>
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#50747272"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                     Value="false">
				<Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
				<Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="#848589"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
			<Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"/>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="24"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="4"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="37"/>
					<ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="17"/>
				</Grid.ColumnDefinitions>

				<ContentPresenter x:Name="Icon"
                                    Margin="1"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22"
                        Height="22">
					<Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
				</Border>
				<ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           VerticalAlignment="Center"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
			</Grid>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
                     Value="{x:Null}">
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                     Value="true">
				<Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemSelectionFill}"/>
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#8071CBF1"/>
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#40FFFFFF"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                     Value="false">
				<Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
				<Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
				<Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
				<Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
		<Grid SnapsToDevicePixels="true">
			<Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
			<Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="Transparent"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
					<ColumnDefinition Width="4"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="37"/>
					<ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
					<ColumnDefinition Width="17"/>
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<Border x:Name="GlyphPanel"
                        Background="#E6EFF4"
                        BorderBrush="#CDD3E6"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22"
                        Height="22">
					<Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="#0C12A1"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
				</Border>
				<ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  VerticalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
				<TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           VerticalAlignment="Center"
                           Visibility="Collapsed"/>
				<Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
			</Grid>
			<Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"

                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
				<ContentControl Name="SubMenuBorder"
                                Template="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                IsTabStop="false">
					<ScrollViewer Name="SubMenuScrollViewer" CanContentScroll="true"
                                    Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
						<Grid RenderOptions.ClearTypeHint="Enabled">
							<Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
								<Rectangle
                                    Height="{Binding ElementName=SubMenuBorder,Path=ActualHeight}"
                                    Width="{Binding ElementName=SubMenuBorder,Path=ActualWidth}"
                                    Fill="{StaticResource SubMenuBackgroundBrush}" />
							</Canvas>
							<Rectangle Fill="#e8e8e8"
                                       Width="26"
                                       HorizontalAlignment="Left" />
							<ItemsPresenter Name="ItemsPresenter"
                                            Margin="1"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="Center"
                                            Grid.IsSharedSizeScope="true"/>
						</Grid>
					</ScrollViewer>
				</ContentControl>
			</Popup>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
				<Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                     Value="true">
				<Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="#D1DBF4FF"/>
			</Trigger>
			<Trigger Property="Icon"
                     Value="{x:Null}">
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsChecked"
                     Value="true">
				<Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
				<Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsHighlighted"
                     Value="true">
				<Setter TargetName="Bg"
                        Property="Fill"
                        Value="{StaticResource MenuItemSelectionFill}"/>
				<Setter TargetName="Bg"
                        Property="Stroke"
                        Value="#8571CBF1"/>
			</Trigger>
			<Trigger Property="IsEnabled"
                     Value="false">
				<Setter Property="Foreground"
                        Value="#FF9A9A9A"/>
				<Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="#EEE9E9"/>
				<Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="#DBD6D6"/>
				<Setter TargetName="Glyph"
                        Property="Fill"
                        Value="#848589"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
		<Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background"
                Value="Transparent"/>
		<Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
		<Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}"/>
		<Style.Triggers>
			<Trigger Property="Role"
                     Value="TopLevelHeader">
				<Setter Property="Padding"
                        Value="7,2,8,3"/>
				<Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role"
                     Value="TopLevelItem">
				<Setter Property="Padding"
                        Value="7,2,8,3"/>
				<Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role"
                     Value="SubmenuHeader">
				<Setter Property="Padding"
                        Value="5,3,2,3"/>
				<Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}"/>
			</Trigger>
			<Trigger Property="Role"
                     Value="SubmenuItem">
				<Setter Property="Padding"
                        Value="5,3,2,3"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>
